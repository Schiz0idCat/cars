classDiagram
    direction TB

    %% ===== LibGDX base (external) =====

    class LGame {
    }
    note for LGame "com.badlogic.gdx.Game"

    class LScreen {
    }
    note for LScreen "com.badlogic.gdx.Screen"

    class LSpriteBatch {
    }
    note for LSpriteBatch "com.badlogic.gdx.graphics.g2d.SpriteBatch"

    class LTexture {
    }
    note for LTexture "com.badlogic.gdx.graphics.Texture"

    class LSound {
    }
    note for LSound "com.badlogic.gdx.audio.Sound"

    class LMusic {
    }
    note for LMusic "com.badlogic.gdx.audio.Music"

    class LCamera {
    }
    note for LCamera "com.badlogic.gdx.graphics.OrthographicCamera"

    class LRectangle {
    }
    note for LRectangle "com.badlogic.gdx.math.Rectangle"

    class LArray {
    }
    note for LArray "com.badlogic.gdx.utils.Array"


    %% ===== Domain =====

    class GameObject {
        - float x
        - float y
        - float width
        - float height
        - float velX
        - float velY
        - Texture texture
        - Rectangle area
        + destruir()
        + getArea() Rectangle
        + setPos(x: float, y: float)
        + colisionaCon(otro: GameObject) boolean
    }

    class Entity {
        + draw(batch: SpriteBatch)
        + update(delta: float)
        + isOutOfScreen() boolean
        + interactWith(entity: Playable)
        + colisionaCon(entity: GameObject) boolean
    }
    note for Entity "Interface"

    class Playable {
        + getVidas() int
        + getPuntos() int
        + getHerido() boolean
        + animacionHerido(delta: float)
        + herir()
        + sumarPuntos(pp: int)
    }
    note for Playable "Interface"

    class Gota {
        + Gota(texture: Texture)
        + update(delta: float)
        + draw(batch: SpriteBatch)
        + isOutOfScreen() boolean
        + colisionaCon(otro: GameObject) boolean
    }

    class Tarro {
        - Sound sonidoHerido
        - int vidas
        - int puntos
        - boolean herido
        - int tiempoHeridoMax
        - float tiempoHeridoActual
        + crear()
        + herir()
        + animacionHerido(delta: float)
        + sumarPuntos(pp: int)
        + update(delta: float)
        + draw(batch: SpriteBatch)
        + isOutOfScreen() boolean
    }

    class GoodNPC {
        - Sound dropSound
        + interactWith(entity: Playable)
    }

    class EvilNPC {
        + interactWith(entity: Playable)
    }

    class NPCType {
    }
    note for NPCType "Annotation"

    class Lluvia {
        - Array gotas
        - Sound dropSound
        - Music rainMusic
        - long lastDropTime
        + crear()
        + actualizarMovimiento(tarro: GameObject) boolean
        + actualizarDibujoLluvia(batch: SpriteBatch)
        + pausar()
        + continuar()
        + destruir()
    }

    class NPCRegister {
        + registerAll()
    }

    class NPCSupplier {
        - registered : List
        + register(npcClass)
        + createRandom() : Gota
    }

    class GameLluviaMenu {
        - SpriteBatch batch
        - BitmapFont font
        - int higherScore
        + create()
        + render()
        + dispose()
        + getBatch() SpriteBatch
        + getFont() BitmapFont
        + getHigherScore() int
        + setHigherScore(higherScore: int)
    }

    class GameScreen {
        - GameLluviaMenu game
        - OrthographicCamera camera
        - SpriteBatch batch
        - BitmapFont font
        - Tarro tarro
        - Lluvia lluvia
        + render(delta: float)
        + pause()
        + show()
        + dispose()
    }

    class MainMenuScreen {
        - GameLluviaMenu game
        - SpriteBatch batch
        - BitmapFont font
        - OrthographicCamera camera
        + render(delta: float)
    }

    class GameOverScreen {
        - GameLluviaMenu game
        - SpriteBatch batch
        - BitmapFont font
        - OrthographicCamera camera
        + render(delta: float)
    }

    class PausaScreen {
        - GameLluviaMenu game
        - GameScreen juego
        - SpriteBatch batch
        - BitmapFont font
        - OrthographicCamera camera
        + render(delta: float)
    }


    %% ===== Inheritance / Implementation =====

    Gota --|> GameObject
    Gota ..> Entity
    Tarro --|> GameObject
    Tarro ..> Entity
    Tarro ..> Playable
    GoodNPC --|> Gota
    EvilNPC --|> Gota


    %% ===== Annotation links =====

    NPCType .. GoodNPC : annotates
    NPCType .. EvilNPC : annotates


    %% ===== Associations =====

    GameObject --> LTexture : uses
    GameObject --> LRectangle : uses
    Gota --> LTexture : uses
    Tarro --> LSound : uses
    Tarro --> LTexture : uses
    Tarro --> LSpriteBatch : draw()
    Lluvia --> Gota : contiene *
    Lluvia --> LSound : uses
    Lluvia --> LMusic : uses
    Lluvia --> LSpriteBatch : draw()
    Lluvia --> GameObject : colisiones
    NPCRegister --> NPCSupplier : registra
    NPCRegister ..> NPCType : lee anotaciÃ³n
    NPCSupplier ..> Gota : fabrica
    GameLluviaMenu --|> LGame
    GameScreen ..> LScreen
    MainMenuScreen ..> LScreen
    GameOverScreen ..> LScreen
    PausaScreen ..> LScreen
    GameScreen *-- Tarro
    GameScreen *-- Lluvia
    GameScreen --> LSpriteBatch
    GameScreen --> LCamera
    MainMenuScreen --> GameLluviaMenu
    GameOverScreen --> GameLluviaMenu
    PausaScreen --> GameLluviaMenu
    PausaScreen --> GameScreen
